{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAwCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACDC,KAAKC,SAAW,GAEtCH,EAAI,uBAAwCI,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAEhDG,EAAE,sBAAqCG,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IA5CnDO,UAAY,CACVC,KAAMC,SAASC,cAAc,UAG/BH,UAAUC,KAAKG,iBAAiB,UAEhC,SAAuBC,GACrBA,EAAIC,iBACJ,IAAMb,EAAQO,UAAUC,KAAKM,SAASd,MAAMe,MACtCC,EAAOT,UAAUC,KAAKM,SAASE,KAAKD,MACpCE,EAASV,UAAUC,KAAKM,SAASG,OAAOF,MAExCG,EAAW,GACjBA,EAASC,KAAKrB,EAAc,EAAGE,IAC3BiB,GAAU,GACZG,EAAAxB,GAASyB,OAAOC,QAAQ,qCACxBJ,EAAW,IAEXA,EAASC,KAAKrB,EAAc,EAAGE,IAEjC,IAAK,IAAIuB,EAAI,EAAGA,EAAIN,EAAQM,GAAK,EAC/BL,EAASC,KAAKrB,EAAcyB,EAAI,EAAGA,EAAIP,EAAOhB,IAGhDC,QAAQuB,WAAWN,GAAUO,MAAK,SAACC,GACjCA,EAAMC,SAAQ,SAACC,EAAMC,GACnBC,YAAW,WACU,cAAhBF,EAAKG,OACNX,EAAAxB,GAASyB,OAAOW,QAAQJ,EAAKb,OAE7BK,EAAAxB,GAASyB,OAAOC,QAAQM,EAAKK,O,GAE9BJ,EAAIb,EAAOhB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nselectors = {\n  form: document.querySelector('.form'),\n}\n\nselectors.form.addEventListener('submit', handlerSubmit);\n\nfunction handlerSubmit(evt) {\n  evt.preventDefault();\n  const delay = selectors.form.elements.delay.value;\n  const step = selectors.form.elements.step.value;\n  const amount = selectors.form.elements.amount.value;\n  \n  const promises = [];\n  promises.push(createPromise(1, delay))\n  if (amount <= 0) {\n    Notiflix.Notify.failure(\"Please set the amount more than 0\");\n    promises = [];\n  } else {\n    promises.push(createPromise(1, delay))\n  }\n  for (let i = 1; i < amount; i += 1) {\n    promises.push(createPromise(i + 1, i * step + delay))\n  }\n\n  Promise.allSettled(promises).then((items) => {\n    items.forEach((item, i) => {\n      setTimeout(() => {\n        if(item.status === \"fulfilled\"){\n          Notiflix.Notify.success(item.value);\n        } else{\n          Notiflix.Notify.failure(item.reason);\n        }\n      }, i * step + delay); \n    });\n  });\n}\n\n \nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    res(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  } else {\n    rej(`❌ Rejected promise ${position} in ${delay}ms`)\n  }\n  })\n};\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","Math","random","concat","selectors","form","document","querySelector","addEventListener","evt","preventDefault","elements","value","step","amount","promises","push","$parcel$interopDefault","Notify","failure","i1","allSettled","then","items","forEach","item","i","setTimeout","status","success","reason"],"version":3,"file":"03-promises.013513be.js.map"}